\documentclass[12pt]{beamer}
%\documentclass[10pt,handout,english]{beamer}
%\documentclass{article}
%\DeclareOption{noxcolor}{\PassOptionsToPackage{noxcolor}{beamerbasearticle}}
%\usepackage[envcountsect]{beamerarticle}



\usetheme{Air}
%\usetheme{Oxygen}
\usepackage{thumbpdf}
\usepackage{wasysym}
\usepackage{ucs}
%\usepackage[utf8]{inputenc}
\usepackage{pgf,pgfarrows,pgfnodes,pgfautomata,pgfheaps,pgfshade}
\usepackage{verbatim}
\usepackage{comment}
\usepackage{listings,relsize} 
\usepackage{url}
\lstloadlanguages{R} 
%\frame{}[shrink=10]
%\pgfdeclareimage[width=\paperwidth]{oxygen-header}{mycollege-header}

\geometry{paperwidth=160mm,paperheight=125mm}
\usepackage{pgfpages}

\usepackage{lipsum}

\usepackage{inconsolata}
%
%<<echo=FALSE>>=
%  options(width=60)
%
%  listing <- function(x, options) {
%    paste("\\begin{lstlisting}[basicstyle=\\ttfamily,breaklines=true]\n",
%      x, "\\end{lstlisting}\n", sep = "")
%  }
%  knit_hooks$set(source=listing, output=listing)
%@


\pdfinfo
{
  /Title       (Data manipulation in R: a program to use when size matters)
  /Creator     (Peter Shaw)
  /Author      (Peter Shaw)
}
%\pgfpagesuselayout{4 on 1}[a4paper,border shrink=5mm,landscape]
%\pgfpagesuselayout{2 on 1}[a4paper,border shrink=5mm,landscape]
%\pgfpagesuselayout{1 on 1 with notes}[a4paper,border shrink=5mm]
%\pgfpagesuselayout{2 on 1 with notes landscape}[a4paper,border shrink=5mm]

\title{Data manipulation in R}
\subtitle{A program to use when size matters}
\author{Peter Shaw}

%-------------------------------------------------------------------------------------
\begin{document}
\lstset{language=R,basicstyle=\smaller[2]
,commentstyle=\rmfamily\smaller,  showstringspaces=false,
xleftmargin=4ex,literate={<-}{{$\leftarrow$}}1 {~}{{$\sim$}}1,
tabsize=3, 
showstringspaces=false} 
\lstset{escapeinside={(*}{*)}}   % for (*\ref{ }*) inside lstlistings (S code) 
\linewidth=325pt
\frame{\titlepage}
%^\end{frame}

\section*{}
\AtBeginSection[]
{
\begin{frame}
  \frametitle{Outline}
  \tableofcontents[section=1,hidesubsections]
  %\tableofcontents
\end{frame}
}

%\AtBeginSection[]
%{
%  \frame<handout:0>
%  {
%    \frametitle{Outline}
%    \tableofcontents[currentsection,hideallsubsections]
%  }
%}
%\AtBeginSubsection[]
%{
%  \frame<handout:0>
%  {
%    \frametitle{Outline}
%    \tableofcontents[sectionstyle=show/hide,subsectionstyle=show/shaded/hide]
%  }
%}

\newcommand<>{\highlighton}[1]{%
  \alt#2{\structure{#1}}{{#1}}
}

\newcommand{\icon}[1]{\pgfimage[height=1em]{#1}}



%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%% Content starts here %%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\section*{Introduction}
%\begin{frame}
%  \vfill
%  \centering
%  \highlighton{
%  \usebeamerfont*{frametitle}A common scenario
%  \usebeamerfont*{framesubtitle}A friend has emailed you her data in a spreadsheet
  
%  \vfill
%\end{frame}


\begin{frame}
  \frametitle{Why use R?}
  \framesubtitle{Why not use a spreadsheet?}

\begin{block}{Todays workshop}
\begin{itemize}
\item A common scenario
\item A friend has emailed you her data in a spreadsheet
\item Todays workshop is about how to get started.
\item It's not about impressing with R code
\end{itemize}

\end{block}
  \begin{block}{Why not use a spreadsheet?}
  \begin{itemize}
    \item Data manipulation in Excel is VERY risk and time consuming
    \item A range of software packages are available for Excel
    \item Large data sets can exceed the size limits of standard programs
    \item Spreadsheets don't have the inherent understanding of statistics that R has
    \item For example handling of N\/A's
    \item R is hot!
  \end{itemize}
  \end{block}
\end{frame}

\begin{frame}
  \frametitle{Why use R?}
  \begin{block}{Why use R?}
  \begin{itemize}
    \item R is free
    \item R is available on most operating systems Windows, OS X, Linux
    \item There are huge numbers of packages available
    \item Its becoming the international standard for statistics
  \end{itemize}
  \end{block}
\end{frame}

%@book{Teetor:2011:RC:2011867,
% author = {Teetor, Paul},
% title = {R Cookbook},
% year = {2011},
% isbn = {0596809158, 9780596809157},
% edition = {1st},
% publisher = {O'Reilly Media, Inc.},
%} 

\begin{frame}%[allowframebreaks]
\frametitle{Getting Started}
  \framesubtitle{Some References}
  \begin{thebibliography}{10}    
  \setbeamertemplate{bibliography item}[book]
  \bibitem{Teetor:2011:RC:2011867}
    James P. Howard.
    \newblock {\em R Cookbook}.
    \newblock O'Reilly Media, Inc, 2011.
 
  \setbeamertemplate{bibliography item}[book]
  \bibitem{Jemand2000}
    Phil Spector.
    \newblock {\em Data Manipulation with R.}
    \newblock Use R series 
    \newblock Springer, 2008
    
%@book{R:Spector:2008,
%  author = {Phil Spector},
%  title = {Data Manipulation with R},
%  publisher = {Springer},
%  year = {2008}
%}   
%  \setbeamertemplate{bibliography item}[article]
%  \bibitem{Jemand2000}
%    Phil Spector.
%    \newblock {\em Data Manipulation with R.}
%    \item Use R series 
%    \newblock Springer, 2008
%https://cran.r-project.org/doc/manuals/R-intro.pdf
  \end{thebibliography}
\end{frame}

\begin{frame}
  \frametitle{Getting Started}
  \framesubtitle{Todays Files}
\begin{block}{Workshop files on Github}
\url{https://github.com/pechang03/SizeDoesMatter}
\end{block}

\begin{itemize}
\item The slides. {\bf main.pdf}
\item The handouts {\bf handout.pdf}
\item The R code {\bf SizeDoesMatterEg.R}
\item The spreadsheets
\begin{itemize}
\item \url{1_R Wkshp_dummy data_OTU table.xlsx}
\item \url{2_R Wkshp_dummy data_Env Data_incl2outliersMK.xlsx}
\item \url{3_Follow up data from contaminated site_MK.xlsx}
\end{itemize}
\end{itemize}
\end{frame}

\begin{frame}
  \frametitle{Getting Started}
  \framesubtitle{Installing R!}

  \begin{block}{Download it}
  \begin{itemize}
    \item Open \url{http://www.r-project.org}
    \item Click CRAN (Under download on Top Left)
    \item Click \url{http://cran.ms.unimelb.edu.au/} University of Melbourne
  \end{itemize}
  \end{block}

  \begin{block}{Windows}
  \begin{itemize}
    \item Select Windows
    \item Select Base
    \item Download R (suggest latest version)
  \end{itemize}
  \end{block}

  \begin{block}{OS X}
  \begin{itemize}
    \item Select Select OS X
    \item Select R-3.2.2.pkg (or the version that matches your OS version)
  \end{itemize}
  \end{block}

\end{frame}

\begin{frame}{Getting Started}
\framesubtitle{Installing a GUI}
\begin{block}{How about RStudio}
\begin{itemize}
\item \url{https://www.rstudio.com/products/rstudio/download/}
\item Its also on your thumb drive
\end{itemize}
\end{block}

\end{frame}

\begin{frame}[fragile]
  \frametitle{Getting Started}
  \framesubtitle{Basic steps}

<<chunk1>>=
2+5
# Create a sequence of numbers
X = 2:10

# Display basic statistical measures
summary(X)
# use q() to quit
@
\clearpage
\end{frame}

\begin{frame}[fragile]
  \frametitle{Getting Started}
  \framesubtitle{Help Functions}
\begin{block}{To access the documentation type}
\end{block}
\begin{lstlisting} 
help.start()
help(summary)
args(summary)
example(sd)
??package
\end{lstlisting} 
\clearpage
\end{frame}

\begin{frame}
  \frametitle{Help Functions}
  \framesubtitle{Search the Web}
\begin{block}{To search R documentation}
\begin{itemize}
\item RSiteSearch("key phrase")
\item help(adf.test,package="tseries")
\item To search for a tutorial for a package\\
 vignette(package="packagename")
\item For an intro to vignettes see\\
\url{https://cran.r-project.org/web/packages/sos/vignettes/sos.pdf}
\item Examples on the web\\
\url{http://shiny.rstudio.com/gallery/}
\end{itemize}
\end{block}
\begin{block}{Custom Google search focused on R-specific websites}
\url{http://rseek.org}
\end{block}

\begin{block}{Coding Q\&A site}
\url{http://stackoverflow.com}
\url{http://stats.stakexchange.com}
\end{block}

\end{frame}

\subsection*{Some manners}
\begin{frame}
  \frametitle{Iterative development}
  \framesubtitle{Working Creatively}
Research on how to work creatively based on case studies of  successful R\&D projects developed into Agile
\begin{itemize}
\item Keep the `manager' away
\item Work sustainably
\item People over process
\item Iterative development
\end{itemize}
\end{frame}

\subsection*{Basic R Data types}
\begin{frame}[fragile]
  \frametitle{R Data types}
  \framesubtitle{Lists, frames and tables}
  \begin{block}{Vectors}
      \begin{itemize}
         \item  Vectors $l\leftarrow c(1,3,4,7,11)$
         \item  Refer to elements using array $l[c(2,5)]$ 2nd and 5th elements of l
    \end{itemize}
  \end{block}
  \begin{block}{Data Frames}
%      \begin{lstlisting}
%a <- c(35,23,24,65)      
%e <- c("Peter", "John", "Mark", NA)
%f <- c(TRUE,TRUE,TRUE,FALSE)
%team <- data.frame(a,e,f)
%names(team) <- c("Age","Names","Passed") # variable names
%    \end{lstlisting}
 \end{block} 
<<chunk2,echo=TRUE>>=
a <- c(35,23,24,65)      
e <- c("Peter", "John", "Mark", NA)
f <- c(TRUE,TRUE,TRUE,FALSE)
team <- data.frame(a,e,f)
names(team) <- c("Age","Names","Passed") # variable names
str(team)
@    
 
\end{frame}  

\section*{Reading files}
\begin{frame}[fragile]
  \frametitle{Let's read the first table}
  \framesubtitle{Check the current directory}
\begin{block}{Where are we}
\begin{lstlisting} 
getwd()
setwd("/Users/pcru/SizeDoesMatter1")
dir() #This lists the files
ls()  #This lists the variables
\end{lstlisting}
\url{http://www.statmethods.net/input/contents.html}
\end{block}
\end{frame}

\begin{frame}[fragile]
  \frametitle{Reading a table from a file}
  \framesubtitle{Reading an excel table}
\begin{block}{To read a csv table as a table try}
\begin{lstlisting} 
tab1 <- as.matrix(read.csv(file="filetable.csv", sep=",", header=FALSE))
\end{lstlisting}
\end{block}
\begin{block}{But our table is an excel file}
\begin{itemize}
\item What about a package?
\item \url{http://www.thertrader.com/2014/02/11/a-million-ways-to-connect-r-and-excel/}
\item Installing the R package xlsx
\item CRAN mirror \url{http://cran.csiro.au}
\item Change in preferences
\end{itemize}
\end{block}
\end{frame}

%\section*[Help]{Getting help on packages}
\section*{Getting help on packages}
\begin{frame}[fragile]
  \frametitle{R Packages}
  \framesubtitle{CRAN}
  
   \begin{block}{Where from}
  \begin{itemize} 
  \item install command
  \item $install.packages(pkgs)$
  \end{itemize}
  \end{block}

  \begin{block}{Citing Packages}
  \begin{itemize}
 \item Citing packages
 \item Getting the bibtex entry into endnote
 \item \url{http://www.lib.uts.edu.au/question/5955/how-can-i-import-bibliography-endnote-bibtex-latex-what-about-converting-other-way}
   \end{itemize}
  \end{block}
\begin{lstlisting}
  x<-citation()
  x1<-citation(package="RSQLite")
  toBibtex(x)
  
  sessionInfo()
  packages_in_use <- c( sessionInfo()$basePkgs, names( sessionInfo()$loadedOnly ) )
the_citations_list <- lapply( X=packages_in_use, FUN=citation)
the_citations_list
\end{lstlisting}
%See also url 
%\url{https://cran.r-project.org/web/packages/RefManageR/vignettes/TestRmd.html}

%<<chunk5>>=
%sessionInfo()
% x<-citation()
% toBibtex(x)
%@  
%  ggplot2_1.0.0  corrplot_0.73  reshape2_1.4.1 plyr_1.8.1     sqldf_0.4-10   chron_2.3-47   gsubfn_0.6-6   % proto_0.3-10   RSQLite_1.0.0  DBI_0.3.1      stringr_0.6.2  xtable_1.7-4   xlsx_0.5.7     xlsxjars_0.6.1 rJava_0.9-7

\end{frame}

\begin{frame}[fragile]
  \frametitle{Reading an excel table}
  \framesubtitle{An example}
\begin{lstlisting} 
table1<-read.xlsx2("1_R Wkshp_dummy data_OTU table.xlsx", sheetName = 

"Sheet1",header=FALSE,rowNames=FALSE,transpose=TRUE,endRow=18)
\end{lstlisting}
{\bf Loading the xlsx package}  
<<chunk3,echo=FALSE>>=
require(xlsx)
require(xtable)
setwd("/Users/pcru/SizeDoesMatter1")
table1<-read.xlsx2("1_R Wkshp_dummy data_OTU table.xlsx", sheetName = "Sheet1",header=FALSE,rowNames=FALSE,transpose=TRUE,endRow=18)
@
\end{frame}
\begin{frame}[fragile]
  \frametitle{Reading an excel table}
  \framesubtitle{The columns types are wrong}
<<chunk3iii,results='asis', echo=FALSE>>=
print(xtable(head(table1[,1:7]),size=tiny))
@
\clearpage
\end{frame}

\begin{frame}[fragile]
  \frametitle{Reading an excel table}
  \framesubtitle{Transpose the table}
  \begin{block}{Transposing}
  We need to transpose the table and set the column names correctly
  \end{block}
<<chunk6, echo=TRUE>>=
table1t=setNames(data.frame(t(table1[,-1])),table1[,1])
@
\url{http://rgm3.lab.nig.ac.jp/RGM/R_rdfile?f=Ecdat/man/read.transpose.Rd&d=R_CC}
\url{http://stackoverflow.com/questions/17288197/reading-a-csv-file-organized-horizontally}
\end{frame}

\begin{frame}[fragile]
  \frametitle{Fields across many columns}
  \framesubtitle{Replicating first column}
\begin{block}{ TDD -- First do it the easy way first}
\end{block}
<<chunk6x, echo=TRUE>>=  
ctridx<-which(table1t$Group=="Control")
table1t$Group[1:48]<-"Contaminated"
table1t$Group[(ctridx+1):48]<-"Control"
@
\lstset{columns=flexible}
\lstset{keepspaces=true}
\begin{lstlisting}(tabsize is 4)
ttt<-table1t$Site
for(i in c(2:length(table1t$Site)))
{
    temp<-as.character(table1t$Site[i])
    tempb<-as.character(ttt[i-1])
    if(table1t$Site[i]=="") 
    {
         ttt[i]<-tempb
    }
    if(!table1t$Site[(i)]=="")
    {
        ttt[i]<-temp
    }
}
table1t$Site<-ttt
\end{lstlisting}

<<chunk6ii, echo=FALSE>>=
ttt<-table1t$Site
for(i in c(2:length(table1t$Site)))
{
temp<-as.character(table1t$Site[i])
tempb<-as.character(ttt[i-1])
#print(i)
#print(temp)
#print(tempb)
if(table1t$Site[i]=="")
{
#print("a")
 ttt[i]<-tempb
 }
if(!table1t$Site[(i)]=="")
{
#print("b")
ttt[i]<-temp
}
print(ttt[i])
}
table1t$Site<-ttt
@
\clearpage
\end{frame}

%\section*[Strings]{Working with strings}
\section*{Strings}
\begin{frame}[fragile]
  \frametitle{How to work with strings}
  \framesubtitle{stringr package}
\begin{itemize}
\item \begin{lstlisting}
require(stringr)
\end{lstlisting}
  A look at the stringer package
\item \begin{lstlisting} 
stri_c(str1,str2)
\end{lstlisting}    concatenates two string
\item \begin{lstlisting}
str_len(str)
\end{lstlisting}
\end{itemize}

<<chunk6iii, echo=TRUE>>=
require(stringr)
table1t$Rep<-str_replace(table1t$Rep,"[rep]{3}?","\\1")
table1t$Rep<-str_replace(table1t$Rep,"A","1")
table1t$Rep<-str_replace(table1t$Rep,"B","2")
table1t$Rep<-str_replace(table1t$Rep,"C","3")
table1t$Rep<-as.factor(table1t$Rep)
@

%<<chunk6i,results='asis', echo=FALSE>>=
%print(xtable(head(table1t[,1:5])))
%print(xtable(summary(table1t[,1:5])))
%@
\clearpage
\end{frame}

\begin{frame}[fragile]
  \frametitle{Reading Tables}
  \framesubtitle{Reading a table of other types}
\begin{itemize}  
\item \url{http://www.statmethods.net/input/importingdata.html}
%table1<-read.xlsx2("1_R Wkshp_dummy data_OTU table.xlsx", sheetName = "Sheet1",header=FALSE,rowNames=TRUE)
\item \url{http://stackoverflow.com/questions/17288197/reading-a-csv-file-organized-horizontally}
\item \url{http://rgm3.lab.nig.ac.jp/RGM/R_rdfile?f=Ecdat/man/read.transpose.Rd&d=R_CC}
\item Input files from Stata
\end{itemize}
\begin{lstlisting} 
library(foreign)
mydata <- read.dta("c:/mydata.dta")  
\end{lstlisting} 
\end{frame}

\begin{frame}
  \frametitle{Morning Tea Time}
  \framesubtitle{Back in 20min}
  {\bf Need coffee !!} 
\end{frame}

%\section*[Types]{Working with Data Types}
\section*{Types}
\begin{frame}[fragile]
  \frametitle{Let's read the next table}
  \framesubtitle{Reading a table using xlxs}
<<chunk7, echo=TRUE>>=
setwd("/Users/pcru/SizeDoesMatter1")
#dir()
table2<-read.xlsx2("2_R Wkshp_dummy data_Env Data_incl2outliersMK.xlsx", sheetName ="Sheet2",header=TRUE,rowNames=FALSE)
@
<<chunk7i,results='asis', echo=FALSE>>=
print(xtable(head(table2[,1:6]),font=small))
@
%print(xtable(summary(table1t[,1:5])))
\clearpage
\end{frame}

\begin{frame}[fragile]
  \frametitle{Reading the next table}
  \framesubtitle{Reading a table I}
  \begin{alert}{Oh NO}
\begin{itemize}  
\item All columns have been set to factors
\item Dates have different formats
\end{itemize}
\end{alert}
<<chunk7ii, echo=TRUE>>=
str(table2[,1:11])
@

\end{frame}

\begin{frame}[fragile]
  \frametitle{Reading the next table}
  \framesubtitle{Reading a table II}
\begin{block}{Break it down}
First read a few rows only
\end{block}
\begin{small}
<<chunk8ii, echo=TRUE,tidy=TRUE,highlight=TRUE>>=
table2<-read.xlsx2("2_R Wkshp_dummy data_Env Data_incl2outliersMK.xlsx",
 sheetName ="Sheet2",header=TRUE,rowNames=FALSE,as.Data.frame=FALSE,
 colIndex=c(1:5),stringsAsFactors=FALSE,
 colClasses=c("character","numeric","numeric",rep("character",2)),endRow=4)
sapply(table2,mode)
sapply(table2,class)
@
\end{small}
\clearpage
\end{frame}

\begin{frame}[fragile]
  \frametitle{Reading the next table}
  \framesubtitle{Setting the data types}
\begin{block}{colClasses}
\begin{itemize}
\item The variable colClasses can be used to specify the row types.
\item We need to set {\bf stringsAsFactor=FALSE} or all columns with be loaded as factors
\item The dates are in a non-standard format so we need to read them as chars first
\end{itemize}
\end{block}

<<chunk8v, echo=TRUE>>=
table2b<-read.xlsx2("2_R Wkshp_dummy data_Env Data_incl2outliersMK.xlsx", 
sheetName = "Sheet2",header=TRUE,rowNames=FALSE,as.Data.frame=FALSE,
colIndex=c(1:11),stringsAsFactors=FALSE,
colClasses=c("character",rep("numeric",2),"character",rep("character",2),rep("numeric",6)))
sapply(table2,class)
@
\clearpage
\end{frame}

\begin{frame}[fragile]
  \frametitle{Reading table 2}
  \framesubtitle{Setting the Date Type}

%<<setup, include=FALSE, cache=FALSE, tidy=TRUE>>=
%options(tidy=TRUE, width=30)
%@
 <<chunk8iii, echo=TRUE,tidy=TRUE,width=30>>=
table2f<-table2
table2f$Spill.date<-as.Date(table2f$Spill.date,"%d-%b-%y")
table2f$Sample.collection.date<-as.Date(table2f$Sample.collection.date,"%d.%m.%y")
#sapply(table2f,mode)
sapply(table2f,class)
@
\clearpage
\end{frame}

\begin{frame}[fragile]
  \frametitle{Reading table 2}
  \framesubtitle{Setting the Date Type Correctly}
\begin{block}{colClasses}
\begin{itemize}
\item The as.Data method can take a format string as the second variable 
\item The format strings are described in help on  strptime
\item But Spill.data has {\bf two formats}
\item We can use the if else function to combine them
 \end{itemize}
 \end{block}
 <<chunk8vi, echo=TRUE>>=
table2bf<-table2b
table2bf$Spill.date<-as.Date(table2bf$Spill.date,"%d-%b-%y")
cdate1<-as.Date(table2bf$Sample.collection.date,"%d.%m.%y")
cdate2<-as.Date(table2bf$Sample.collection.date,"%d/%m/%y")
table2bf$Sample.collection.date<-as.Date(ifelse
(!is.na(cdate1),as.Date(cdate1),as.Date(cdate2)), origin="1970-01-01")
table2bf$Group<-as.factor(table2bf$Group)
table2bf$Rep<-as.factor(table2bf$Rep)
dated<-table2bf$Sample.collection.date-table2bf$Spill.date
@
\end{frame}

\begin{frame}[fragile]
  \frametitle{Reading table 2}
  \framesubtitle{Setting the Date Type Correctly}
\begin{block}{Count the NAs}
\end{block}
 <<chunk8vib, echo=TRUE>>=
na_count <-sapply(table2bf, function(y) sum(length(which(is.na(y)))))
na_count

@
\clearpage
\end{frame}

%\section*[Strings]{Working with strings}
\section*{Strings}
\begin{frame}[fragile]
  \frametitle{Reading table 2}
  \framesubtitle{Just fix the Rep column using the stringer package again}

<<chunk8iv, echo=TRUE>>=
require(stringr)
table2bf$Rep<-str_replace(table2bf$Rep,"[rep]{3}?","\\1")
table2bf$Rep<-str_replace(table2bf$Rep,"A","1")
table2bf$Rep<-str_replace(table2bf$Rep,"B","2")
table2bf$Rep<-str_replace(table2bf$Rep,"C","3")
table2bf$Rep<-as.factor(table2bf$Rep)
str(table2bf)
@
\end{frame}  
%\section*[Merge]{How to I merge two data sets}
\section*{Merging Tables}
\begin{frame}[fragile]
  \frametitle{How to merge two data sets?}
  \framesubtitle{Using the merge command}

\begin{block}{The inbuilt command merge}
\begin{itemize}
\item R has a command merge
\item To begin, start looking at the first 9 lines of the tables and merge them 
\item Need to use Group, Site, Sample.ID because otherwise it's not unique
\end{itemize}
\end{block}
\begin{lstlisting}
merge(x, y, by = intersect(names(x), names(y)),
      by.x = by, by.y = by, all = FALSE, all.x = all, all.y = all,
      sort = TRUE, suffixes = c(".x",".y"),
      incomparables = NULL, ...)
\end{lstlisting}

<<chunk9i, echo=TRUE>>=
tab1c<-table1t[1:9,] 
tab2c<-table2b[1:9,]
m1<-merge(tab1c,tab2c,by.x="Sample ID",by.y="Sample.ID")
m2<-merge(table1t,table2bf,by.x=c("Group","Site","Sample ID"),
by.y=c("Group","Site","Sample.ID"))
m3<-merge(table1t,table2bf,by.x=c("Group","Site","Sample ID","Rep"),
by.y=c("Group","Site","Sample.ID","Rep"))
@
\end{frame}  

\begin{frame}
  \frametitle{Lunch Time}
  \framesubtitle{Back in 30 min}
  Provided
\end{frame}

\begin{frame}[fragile]
  \frametitle{How do I append two data sets?}
  \framesubtitle{To begin load the third data set}
  \begin{block}{Follow up data from contaminated site}
  %3_Follow up data from contaminated site.xlsx

  \end{block}
\begin{lstlisting} 
table3<-read.xlsx2("3_Follow up data from contaminated site_MK.xlsx",
 sheetName ="Sheet1",header=TRUE,rowNames=FALSE,
 colClasses=c(rep("character",3),

rep("character",2),rep("numeric",18)))
table3f<-table3
table3f$Spill.date<-as.Date(table3f$Spill.date,"%d.%m.%y")
table3f$Sample.collection.date<-as.Date(table3f$Sample.collection.date,"%d.%m.%y")
sapply(table3f,mode)
sapply(table3f,class)
\end{lstlisting}
  
<<chunk10i,echo=FALSE>>=
require(xlsx)
require(xtable)
setwd("/Users/pcru/SizeDoesMatter1")
table3<-read.xlsx2("3_Follow up data from contaminated site_MK.xlsx", 
sheetName = "Sheet1",header=TRUE,rowNames=FALSE,
colClasses=c(rep("character",3),rep("character",2),rep("numeric",18)))

table3f<-table3
table3f$Spill.date<-as.Date(table3f$Spill.date,"%d.%m.%y")
table3f$Sample.collection.date<-as.Date(table3f$Sample.collection.date,"%d.%m.%y")
#sapply(table3f,mode)
#sapply(table3f,class)
@
\end{frame}

\begin{frame}[fragile]
  \frametitle{How do I append two data sets?}
  \framesubtitle{Loading the third data set}
  \begin{block}{Joining table 3 to the other merged tables}
  \begin{itemize}
  \item We need to be careful to match everything
  \item Install the {\bf plyr} package This has lots of useful functions for renaming var etc
  \item This means we need columns for corynebacteriaceae and porphyromondaceae
  \item Should these values be NA or 0?
  \item We will do one of each. 
  \item Generally we would use NA but in this case 0 is better as its likely the rows were missing as none were detected
 \end{itemize}
  %_Follow up data from contaminated site.xlsx
  \end{block}
\end{frame}

\begin{frame}[fragile]
  \frametitle{How do I append two data sets?}
  \framesubtitle{Appending the third set}  
\begin{lstlisting} 
require(plyr)
Sample.ID<-rep(20000,3)
table3fi<-cbind(table3f,Sample.ID)
#how many columns I can't count
ncol(table3fi)
ncol(m3)
#now get the cols all right
table3fii<-table3fi[c(1,2,24,3,4:23)]
m3i<-m3[c(1:4,19:20,5:18,21:26)]
setdiff(names(m3i),names(table3fii))
m3ii<-rename(m3i,c("Sample ID"="Sample.ID"))
corynebacteriaceae<-rep(0,nrow(table3fii))
porphyromondaceae<-rep(NA,nrow(table3fii))
table3fiii<-cbind(table3fii, corynebacteriaceae, porphyromondaceae)
setdiff(names(m3ii),names(table3fiii))

m3ii[,c(7:24)] <- sapply(m3ii[,c(7:24)],as.numeric)
m3ii[,c(1:4)] <-sapply(m3ii[,c(1:4)],as.character)
#m3ii[,c("Site")] <-sapply(m3ii[,c("Site")],as.character)

table3fiii[,c(1:4)] <- sapply(table3fiii[,c(1:4)],as.character)
table3fiii[,c(7:24)] <- sapply(table3fiii[,c(7:24)],as.numeric)
table4<-rbind(m3ii,table3fiii)
table4[,1] <- sapply(table4[,1],as.factor)
\end{lstlisting}
  
<<chunk10ii,echo=FALSE>>=
require(plyr)
Sample.ID<-rep(20000,3)
table3fi<-cbind(table3f,Sample.ID)
#how many columns I can't count
ncol(table3fi)
ncol(m3)
#now get the cols all right
table3fii<-table3fi[c(1,2,24,3,4:23)]
m3i<-m3[c(1:4,19:20,5:18,21:26)]
setdiff(names(m3i),names(table3fii))
m3ii<-rename(m3i,c("Sample ID"="Sample.ID"))
corynebacteriaceae<-rep(0,nrow(table3fii))
porphyromondaceae<-rep(NA,nrow(table3fii))
table3fiii<-cbind(table3fii, corynebacteriaceae, porphyromondaceae)
setdiff(names(m3ii),names(table3fiii))

m3ii[,c(7:24)] <- sapply(m3ii[,c(7:24)],as.numeric)
m3ii[,c(1:4)] <-sapply(m3ii[,c(1:4)],as.character)
#m3ii[,c("Site")] <-sapply(m3ii[,c("Site")],as.character)

table3fiii[,c(1:4)] <- sapply(table3fiii[,c(1:4)],as.character)
table3fiii[,c(7:24)] <- sapply(table3fiii[,c(7:24)],as.numeric)
table4<-rbind(m3ii,table3fiii)
table4[,1] <- sapply(table4[,1],as.factor)
@ 
\end{frame}

\begin{frame}
  \frametitle{Another Break}
  %\framesubtitle{}
\end{frame}


%\section*[Reshape]{Fat or wide}
\section*{Fat or wide}
\begin{frame}[fragile]
  \frametitle{Reshaping Tables}
  \framesubtitle{reshape2}
  \begin{block}{reshape2}
  \begin{itemize}
 \item vignette(reshape) doesn't work
 \item try \url{http://had.co.nz/reshape/}
  \item and \url{http://seananderson.ca/2013/10/19/reshape.html}
  \end{itemize}
  \end{block}
  \begin{block}{A small example for melt}
  \begin{itemize}
  \item Suppose we what a box plot to see if there are outliers
  \item We will use ggplot2 box plot
  \item The box plot needs data in long format. 
  \item To use this first {\bf melt} the data
  \item We need to specify the unique key, the variable name and the value name
  \item The key is not unique.
  \item Then plot it
  \end{itemize}
  \end{block}
\end{frame}  
  
\begin{frame}[fragile]
  \frametitle{Reshaping Tables}
  \framesubtitle{melt and boxplot}
  \begin{block}{The code}
  \end{block}
    \begin{lstlisting}
    matable4<-melt(table4[,c(1:4,6:25)],variable.name = "microbe",
    value.name ="abundance", id=c("Group","Site","Sample.ID","Rep"),
    factorsAsStrings=FALSE,rm.na=TRUE)
   \end{lstlisting}
   
 <<chunk10iii, echo=TRUE>>=
 require(reshape2)
 matable4<-melt(table4[,c(1:4,7:25)],variable.name = "microbe",
 value.name ="abundance", id=c("Group","Site","Sample.ID","Rep"),
 factorsAsStrings=FALSE,rm.na=TRUE)
@
\end{frame}  

\begin{frame}[fragile]
  \frametitle{Reshaping Tables}
  \framesubtitle{Boxplot cont}
  \begin{block}{Using ggplot}
  \begin{itemize}
  \item As we have keys we need to specify the x and y
  \item Let's make the sites different colors
  \item The variable names are long so flip it with $coord\_flip()$
  \item Looks like we have outliers...hmm
  \end{itemize}
  \end{block}

<<chunk10iv, fig.width=10, fig.height=10, out.width='.85\\linewidth', fig.show='hold', echo=TRUE>>=
require(ggplot2)
 ggplot(matable4,aes(x=microbe,y=abundance,fill=Site)) + geom_boxplot() +  coord_flip()
@
\end{frame}  


\begin{frame}[fragile]
  \frametitle{Finding Outliers}
  \framesubtitle{Interquartile range}
  \begin{block}{Finding Outliers}
  \begin{itemize}
  \item Outliers are defined 1.5 times the interquartile range above the upper quartile
  \item Assume that  rows 12 and 14 in phosphate are errors as the 9 is typed twice
  \item Still issues with ammonia to explore
  \end{itemize} 
   \end{block}   
 <<chunk10v, echo=TRUE>>=
  phosphate<-table4[,"phosphate..ppb."]
  upper.limit <- quantile(phosphate)[4] + 1.5*IQR(phosphate)
  lower.limit <- quantile(phosphate)[2] - 1.5*IQR(phosphate)
  #table4[phosphate> upper.limit,c("Site","phosphate..ppb.")]
@  
\end{frame}

\begin{frame}[fragile]
  \frametitle{Reshaping Tables}
  \framesubtitle{Finding Outliers}
  \begin{block}{Removing Outliers}
   \end{block}   
<<chunk10vi,results='asis', echo=FALSE>>=
  print(xtable(head(table4[phosphate> upper.limit,c("Site","phosphate..ppb.")]),font=small))
@
 <<chunk10vii, echo=TRUE>>= 
 table4[12,"phosphate..ppb."]<-982
 table4[14,"phosphate..ppb."]<-982
@      
\end{frame}

\begin{frame}[fragile]
  \frametitle{Outliers check}
  \framesubtitle{ Redo the boxplot}
  \begin{block}{Look again ggplot}
  \end{block}

 <<chunk10viii, fig.width=15, fig.height=15, out.width='.85\\linewidth', fig.show='hold', echo=FALSE>>=
 matable4b<-melt(table4[,c(1:4,7:25)],variable.name = "microbe",
 value.name ="abundance",  id=c("Group","Site","Sample.ID","Rep"),
 factorsAsStrings=FALSE,rm.na=TRUE)
 
 ggplot(matable4b,aes(x=microbe,y=abundance,fill=Site)) + 
 geom_boxplot() +  coord_flip()
@
\end{frame} 

\begin{frame}[fragile]
  \frametitle{R package}
  \framesubtitle{RQLlite}
  \begin{block}{RSQLite}
  \begin{itemize}
  \item Suppose merge is not enough? I know about SQL and want to do joins
  \item Install RSQLite
  \item We also need to install DBI
  \end{itemize}
  \end{block}
<<chunk9ii, echo=FALSE>>=
library(DBI)
require(RSQLite)
#require(gsubfn)
#require(chron)
#require(tcltk)
#library(sqldf)
#library(RSQLite.extfuns)
@

<<chunk9iii, echo=TRUE>>=
 db <- dbConnect(SQLite(), dbname="Test.sqlite")
#getConfig()$staged.queries
# sqldf(attach "Test1.sqlite" as new)
dbBegin(db)
dbWriteTable(db,"table1",table1t,overwrite=TRUE)
dbReadTable(db,"table1")
dbListFields(db,"table1")
dbListTables(db)
dbGetQuery(db, "SELECT * from table1")
#dbDisconnect(db)
@  
\end{frame} 

\begin{frame}[fragile]
  \frametitle{R package}
  \framesubtitle{RQLlite}
  \begin{block}{RSQLite}
  \begin{itemize}
  \item Some links to RSQL ideas
\item \url{http://stackoverflow.com/questions/12307685/join-more-than-2-tables-in-r-using-rsqlite}
\item \url{https://support.rstudio.com/hc/en-us/articles/201057987-Quick-list-of-useful-R-packages}
\item \url{https://cran.rstudio.com/web/packages/dplyr/vignettes/introduction.html}
\end{itemize}
\end{block}
 \begin{lstlisting}
select coalesce(fileA,fileB),valA,valB
               from t1 LEFT OUTER JOIN t2 On t1.fileA= t2.fileB
UNION select coalesce(fileA,fileB),valA,valB
               from t2 LEFT OUTER JOIN t1 ON t1.fileA= t2.fileB
(CREATE TABLE all_files AS SELECT fileA FROM t1 UNION SELECT fileB from t2 UNION ...).             
 \end{lstlisting}

\end{frame}


\begin{frame}
  \frametitle{R package}
  \framesubtitle{svUnit}
     Another important component of TDD is refactoring and unit tests
  \begin{itemize}
     \item Refactoring \url{http://refactoring.com/}
     \item \url{http://www.r-bloggers.com/my-experience-of-learning-r-from-basic-graphs-to-performance-tuning/}
     \item TDD in R \url{http://www.slideserve.com/andrew/test-driven-development-in-r}
     \item Version Control tortiseSVN {\url http://tortoisesvn.net/}
     \item GitHub \url{https://github.com/}
  \end{itemize}
\end{frame}


%%%%%%%%%%%%%%%%%%%%%%%%%


%\section*[Dropping Columns]{Cleaning things up}
\section*{Cleaning things up}
\begin{frame}[fragile]
  \frametitle{Dropping row and columns}
  \framesubtitle{Dropping selected variables}
  \begin{block}{Dropping Row and Columns with too many NAs}  
  \end{block}
\begin{lstlisting}
numNAs_inData4_rows <- apply(rawData4, 1, function(z) sum(is.na(z))) 
numNAs_inData4_col <- apply(table4, 2, function(z) sum(is.na(z))) # count NAs in Data4
lessThan20 <- table4[!(numNAs_inData4_rows > 20),]	   #only select the rows contain less Than 20 NAs
lessThan20col <- table4[,!(numNAs_inData4_col > 20)]
\end{lstlisting}
\end{frame}

\begin{frame}[fragile]
  \frametitle{Dropping row and columns}
  \framesubtitle{Dropping selected variables}

\begin{block}{Tidy Data}
In tidy data:
\begin{itemize}
\item Each variable forms a column.
\item Each observation forms a row.
\item Each type of observational unit forms a table.
\item \url{https://cran.r-project.org/web/packages/tidyr/vignettes/tidy-data.html}
\item \url{http://pj.freefaculty.org/R/Rtips.html#toc-Subsection-1.11}
\end{itemize}
\end{block}
 

\begin{block}{Spit out the dates and numbers}
\end{block}
\begin{lstlisting}
dates4<-table4[,c(5,6)]
abundance<-table4[,c(7:25)]
\end{lstlisting}
\end{frame}


\begin{frame}[fragile]
  \frametitle{Adding a new column}
  \framesubtitle{Calculating the number of days}
  %Using the $is.Date$ command
  \begin{block}{Calculating the number of days}
  We can just subtract as.Date fields
  \end{block}
 <<chunk11i, echo=TRUE>>=
 dates4<-table4[,c(5,6)]
abundance<-table4[,c(7:25)]
  days<-dates4[,2]-dates4[,1]
@
  
\end{frame}


%\section*[Normalizeing]{Setting the Relative Abundance}
\section*{Setting the relative abundance}
\begin{frame}[fragile]
  \frametitle{Setting the relative abundance}
  \framesubtitle{Normalizing data}
  \begin{block}{sapply}
  \begin{itemize}
  \item Also known as centring the data
  \item Ecological percentage of the sum of the variables 
  \item We an use sweep to centre the data
  \item $options(digits=1)$ Just to make things pretty
 % \item What about divide by 0
  \end{itemize}
  \end{block}
  \begin{lstlisting}
sweepOutContinu<-sweep(abundance,2,apply(abundance,2,min,na.rm=TRUE))	
afterSweepContinu<-sweep(sweepOutContinu,2,apply(sweepOutContinu,2,max,na.rm=TRUE),"/") 
table5<-cbind(table4[,c(1:6)],afterSweepContinu,days)
options(digits=1)
sweep(abundance, 2, colSums(abundance), FUN="/")
scale(abundance, center=FALSE, scale=colSums(abundance))
 \end{lstlisting}

\end{frame}



\begin{frame}[fragile]
  \frametitle{Now let's have some fun}
  \framesubtitle{Graphics in R}
\begin{block}{R has nice graphs}
\begin{itemize}
\item A graphical output
\item \url{http://rcharts.io/gallery/}
\item R Graph gallery currently down try \url{http://rgraphgallery.blogspot.com/}
%  Titles on R plots
\item A reference on where to go R thumbnails 
\item ggplot2 (scatter plot of 2 var and then 3 plots)
\item To create a correlation heat map
\end{itemize}
\end{block}  
\begin{lstlisting}
 library(corrplot)
 abuncor<-cor(t5lessThan20col[,c(6:22)])
 require(corrplot)
 corrplot(abuncor, method = "circle")
\end{lstlisting} 

<<chunk12, echo=FALSE>>=
sweepOutContinu<-sweep(abundance,2,apply(abundance,2,min,na.rm=TRUE))	
 afterSweepContinu<-sweep(sweepOutContinu,2,apply(sweepOutContinu,2,max,na.rm=TRUE),"/") 
 table5<-cbind(table4[,c(1:6)],afterSweepContinu,days)
numNAs_inData5_col <- apply(table5, 2, function(z) sum(is.na(z)))
 t5lessThan20col <- table5[,!(numNAs_inData5_col > 20)]
 ncol(t5lessThan20col)
 require(corrplot)
 @

\end{frame}
 
 \begin{frame}[fragile]
  \frametitle{Now let's have some fun}
  \framesubtitle{Making a heat map}
\begin{block}{A heat map}
\end{block}
%<<boring-plots, fig.width=5, fig.height=5, out.width='.45\\linewidth', fig.show='hold'>>=
<<chunk12i, echo=FALSE,fig.width=10, fig.height=10, out.width='.85\\linewidth', fig.show='hold'>>=
 abuncor<-cor(t5lessThan20col[,c(6:22)],method="spearman")
 corrplot(abuncor, method = "circle",main="Spearman Correlations")
 @
\end{frame}
%http://www.cookbook-r.com/Graphs/Plotting_distributions_(ggplot2)/


 \begin{frame}[fragile]
  \frametitle{Simple Tests}
  \framesubtitle{ttests}
\begin{block}{t tests}
There are many $t-tests$ available in R
\url{http://www.statmethods.net/stats/ttest.html}
\end{block}

<<chunk13, echo=TRUE>>=
# independent 2-group t-test
t.test(t5lessThan20col[,12],t5lessThan20col[,8])
 @
\end{frame}

\begin{frame}
  \frametitle{What next}
  \framesubtitle{Proposed future talks}
  \begin{block}{Help is on the way}
  \begin{itemize}
  \item Parameterized Complexity Research Unit (PCRU) PhD students
  \item PhD student in Bioinformatics from Central South Uni
  \end{itemize}
  \end{block}
  \begin{block}{Your feedback on some ideas}
  \begin{itemize}
  \item Using Sweave or Knitr
  \item Advanced Data Cleaning 
  \item Network Centric data analysis
  \end{itemize}
  \end{block}
\end{frame}

\begin{frame}
  \frametitle{Resources}
  \framesubtitle{If you want to improve this style}
  \begin{thebibliography}{10}

  \beamertemplatearticlebibitems
%https://www.getdatajoy.com/
  \bibitem{beamer-homepage}
    LaTeX Beamer
    \newblock {\tt http://latex-beamer.sourceforge.net/}

  \bibitem{}
    Sharelatex Site % a link to my slides
    \newblock {\tt https://www.sharelatex.com}
  \bibitem{}
    A Data Cleaning Mooc % a link to my slides
    \newblock {\tt https://www.sharelatex.com}    
%    https://www.coursera.org/course/repdata
  \end{thebibliography}
\end{frame}

\begin{frame}[fragile]
  \frametitle{R Packages Used}
  \framesubtitle{Session Info}
\begin{block}{Output of sessionInfo}
\end{block}
<<chunk14, echo=TRUE>>=
sessionInfo()
#  packages_in_use <- c( sessionInfo()$basePkgs, names( sessionInfo()$loadedOnly ) )
#the_citations_list <- lapply( X=packages_in_use, FUN=citation)
#the_citations_list
@
\end{frame}

%\frame{
%  \vspace{2cm}
%  {\huge Questions ?}
%
%  \vspace{3cm}
%  \begin{flushright}
%    Peter Shaw
%
%    \structure{\footnotesize{peter.shaw@cdu.edu.au}}
%  \end{flushright}
%}


%You can type R commands in your \LaTeX{} document and they will be properly run and the output printed in the document.

%<<chunk1>>=
%# Create a sequence of numbers
%X = 2:10
%
%# Display basic statistical measures
%summary(X)
%
%@
%--------------------------------------------------------------------------------

%So, the mean of the data is $\Sexpr{mean(X)}$ %Inline command


%\clearpage
%Plots
%--------------------------------------------------------------------------------
%<<plot1, fig.pos="t", fig.height=4, fig.width=4, fig.cap="First plot">>=

%xdata = read.csv(file="data.txt", head=TRUE,sep=" ")

%hist(xdata$data, main="ShareLaTeX histogram", xlab="Data")

%@
%--------------------------------------------------------------------------------

%The figure \ref{fig:plot1} is simple histogram.

%\clearpage

%The chunk below will not be printed

%R code imported from external file
%--------------------------------------------------------------------------------
%<<echo=FALSE, cache=FALSE>>=
%read_chunk("mycode.R")
%@

%The code must show up here

%<<myrcode2>>=

%@
%--------------------------------------------------------------------------------


%\frame{
%  \vspace{2cm}
%  {\huge Questions ?}

%  \vspace{3cm}
%  \begin{flushright}
%    Peter Shaw

%    \structure{\footnotesize{peter.shaw@cdu.edu.au}}
%  \end{flushright}
%}
\end{document}